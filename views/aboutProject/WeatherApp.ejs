<% layout("/layouts/boilerplate") -%>
<h1 class="text-center mt-2">Project Details</h1>
<div class="card mb-3 bg-transparent mt-3 mb-5">
  <img src="/images/Weather.png" class="card-img-top rounded shadow w-75 mx-auto" alt="img">
  <div class="card-body">
    <h5 class="card-title text-center"><i class="fas fa-cloud-sun"></i> Weather App (React & OpenWeatherMap API)</h5>
    <p class="card-text text-center">“Real-Time Weather Data with Modern Frontend Technology!”</p>
    <p class="card-text text-center">
      This project is a dynamic weather application built using React and the OpenWeatherMap API. It fetches live weather data based on user input and displays essential information such as temperature, weather conditions, and icons that represent current forecasts.
    </p>
    <p>
      <b>Key Features:</b>
    <ul>
      <li><i class="fas fa-search"></i> Search Functionality: Users can search weather data by city name.</li>
      <li><i class="fas fa-sync-alt"></i> Real-Time API Integration: Fetches live weather data using the OpenWeatherMap API.</li>
      <li><i class="fas fa-mobile-alt"></i> Responsive UI: Built with React components for a clean, modular layout.</li>
      <li><i class="fas fa-cloud"></i> Dynamic Weather Icons: Updates visuals dynamically based on conditions (clear, cloudy, rainy, etc.).</li>
      <li><i class="fas fa-thermometer-half"></i> Error Handling: Displays proper messages for invalid inputs or unavailable data.</li>
    </ul>
    </p>
    <p>
      <b>What I Learned:</b>
    <ul>
      <li>Working with REST APIs and handling asynchronous data using <b>fetch()</b> or axios.</li>
      <li>Building reusable React components and managing state with hooks <b>(useState, useEffect)</b>.</li>
      <li>Structuring a scalable React project.</li>
      <li>Enhancing user experience through conditional rendering and clean design.</li>
    </ul>
    </p>
  </div>
</div>