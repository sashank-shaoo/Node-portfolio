<% layout("/layouts/boilerplate") -%>
<h1 class="text-center mt-2">Project Details</h1>
<div class="card mb-3 bg-transparent mt-3 mb-5">
  <img src="/images/Wanderlust.png" class="card-img-top rounded shadow w-75 mx-auto" alt="img">
  <div class="card-body">
    <h5 class="card-title text-center"><i class="fas fa-plane-departure"></i> Wanderlust (Airbnb Clone)</h5>
    <p class="card-text text-center">“A Full-Stack Travel Experience, Built from Scratch!”</p>
    <p class="card-text text-center">
      Wanderlust is my major project, inspired by Airbnb, developed over 1.5 to 2 months. This application allows users to create, explore, and manage travel listings, incorporating modern web development practices and a wide range of third-party integrations.
    </p>
    <p>
      <b>Key Features:</b>
    <ul>
      <b><i class="fas fa-user-plus"></i> Authentication & Authorization</b>
      <li>Implemented Passport.js with Passport-Local and Passport-Local-Mongoose for secure login and registration.</li>
      <li>Session handling with Express-Session and Connect-Mongo for persistent storage.</li>
    </ul>
    <ul>
      <b><i class="fas fa-image"></i> Image Uploads & Storage</b>
      <li>Integrated Cloudinary and Multer with Multer-Storage-Cloudinary for secure and scalable image uploads.</li>
    </ul>
    <ul>
      <b><i class="fas fa-map-marked-alt"></i> Interactive Maps</b>
      <li>Used @mapbox/mapbox-sdk to display map locations for each listing.</li>
    </ul>
    <ul>
      <b><i class="fas fa-database"></i> Database & Validation</b>
      <li>Built a robust backend using Mongoose (MongoDB).</li>
      <li>Added schema validation with Joi to ensure clean and secure data.</li>
    </ul>
    <ul>
      <b><i class="fas fa-pencil-alt"></i> CRUD Functionality</b>
      <li>Users can Create, Read, Update, and Delete listings, with method override support for RESTful routes.</li>
    </ul>
    <ul>
      <b><i class="fas fa-star"></i> Ratings & Reviews</b>
      <li>Styled using Starability for user-friendly rating features.</li>
    </ul>
    <ul>
      <b><i class="fas fa-bolt"></i> Flash Messages & UX Enhancements</b>
      <li>Implemented Connect-Flash for interactive feedback.</li>
      <li>Used EJS-Mate for templating and layout management.</li>
    </ul>
    </p>
    <p>
      <b>Tech Stack & Packages Used:</b>
      <ul>
        <li>Backend: Express.js, Mongoose, Passport.js</li>
        <li>Frontend: EJS, EJS-Mate, Starability</li>
        <li>Utilities & Middleware: Method-Override, Cookie-Parser, Dotenv</li>
        <li>File & Cloud Services: Multer, Cloudinary, Multer-Storage-Cloudinary</li>
        <li>Map Integration: @mapbox/mapbox-sdk</li>
        <li>Validation: Joi</li>
        <li>Session Management: Express-Session, Connect-Mongo</li>
      </ul>
    </p>
    <p>
      <b>This project helped me:</b>
      <ul>
        <li>Understand end-to-end full-stack development.</li>
        <li>Learn how to integrate third-party APIs and cloud services.</li>
        <li>Master authentication, data validation, and RESTful architecture.</li>
        <li>Gain experience with real-world complexity, from debugging to deployment readiness.</li>
      </ul>
    </p>
  </div>
</div>